#!/usr/bin/env node

// V24 to V30 Advisor Migration Tool
// Extracts advisor data from V24 and creates SQL for V30 Supabase

const fs = require('fs');
const path = require('path');

console.log('🔄 V24 to V30 Advisor Migration Tool');
console.log('=====================================\n');

// Path to V24 advisor data
const v24AppStateFile = '/Users/jeffl/Desktop/v24-ai-board-STABLE/src/contexts/AppStateContext.js';

if (!fs.existsSync(v24AppStateFile)) {
  console.error('❌ V24 AppStateContext.js not found');
  console.log('Expected location:', v24AppStateFile);
  process.exit(1);
}

console.log('📋 Step 1: Reading V24 advisor definitions...');

// Read and extract advisor data
const fileContent = fs.readFileSync(v24AppStateFile, 'utf8');

// Extract the defaultAdvisors array using regex
const advisorMatch = fileContent.match(/const defaultAdvisors = (\[[\s\S]*?\]);/);

if (!advisorMatch) {
  console.error('❌ Could not find defaultAdvisors array in V24 file');
  process.exit(1);
}

let advisorsData;
try {
  // Clean up the extracted JavaScript to be valid JSON-ish
  let advisorString = advisorMatch[1];
  
  // Replace single quotes with double quotes for JSON
  advisorString = advisorString
    .replace(/'/g, '"')
    .replace(/(\w+):/g, '"$1":')  // Add quotes around keys
    .replace(/,(\s*})/g, '$1');   // Remove trailing commas
  
  // This is still JavaScript, so we need to evaluate it carefully
  advisorsData = eval(advisorString);
  
  console.log(`✅ Found ${advisorsData.length} advisors in V24`);
  
} catch (error) {
  console.error('❌ Error parsing advisor data:', error.message);
  process.exit(1);
}

console.log('📋 Step 2: Converting to V30 SQL format...');

// Generate SQL INSERT statements
let sqlStatements = [];
let updateStatements = [];

// First, clear existing default advisors
sqlStatements.push('-- Clear existing default advisors');
sqlStatements.push("DELETE FROM advisors WHERE is_custom = false;");
sqlStatements.push('');

// Generate INSERT statements for each advisor
advisorsData.forEach((advisor, index) => {
  const {
    id,
    name,
    role,
    expertise = [],
    personality = {},
    avatar_emoji,
    voice_profile = {},
    background = {},
    knowledge_base = {},
    ai_service = {},
    is_custom = false,
    is_host = false,
    is_celebrity = false,
    specialty_focus = null
  } = advisor;

  // Generate UUID for V30 (or use a predictable one)
  const uuid = `00000000-0000-0000-0000-${String(index + 1).padStart(12, '0')}`;
  
  // Create system prompt from background and knowledge base
  let systemPrompt = `You are ${name}, ${role}.`;
  
  if (background.story) {
    systemPrompt += `\n\nBackground: ${background.story}`;
  }
  
  if (background.philosophy) {
    systemPrompt += `\n\nPhilosophy: ${background.philosophy}`;
  }

  if (personality.catchphrases && personality.catchphrases.length > 0) {
    systemPrompt += `\n\nKey phrases you use: ${personality.catchphrases.slice(0, 3).join(', ')}`;
  }

  // Build the SQL INSERT
  const sql = `INSERT INTO advisors (
  id, 
  name, 
  role, 
  expertise, 
  personality, 
  avatar_emoji, 
  voice_profile, 
  system_prompt, 
  knowledge_base, 
  is_custom, 
  is_active
) VALUES (
  '${uuid}',
  ${JSON.stringify(name)},
  ${JSON.stringify(role)},
  ARRAY[${expertise.map(e => `'${e.replace(/'/g, "''")}'`).join(', ')}],
  '${JSON.stringify(personality)}'::jsonb,
  ${JSON.stringify(avatar_emoji)},
  '${JSON.stringify(voice_profile)}'::jsonb,
  ${JSON.stringify(systemPrompt.replace(/'/g, "''"))},
  '${JSON.stringify(knowledge_base)}'::jsonb,
  ${is_custom},
  true
);`;

  sqlStatements.push(`-- ${name} - ${role}`);
  sqlStatements.push(sql);
  sqlStatements.push('');
});

// Write SQL file
const sqlContent = sqlStatements.join('\n');
const sqlFilePath = path.join(__dirname, 'v24-advisors-migration.sql');

fs.writeFileSync(sqlFilePath, sqlContent);

console.log('✅ Migration SQL generated successfully!');
console.log(`📄 SQL file: ${sqlFilePath}`);

// Generate summary report
console.log('\n📊 Migration Summary:');
console.log('====================');

const advisorSummary = advisorsData.map((advisor, index) => {
  return `${index + 1}. ${advisor.name} - ${advisor.role}`;
});

console.log(advisorSummary.join('\n'));

// Write JavaScript version for V30 AppStateContext (Option B)
console.log('\n📋 Step 3: Creating V30 JavaScript version...');

const jsContent = `// V30 Enhanced Advisors (migrated from V24)
// Generated by migrate-v24-advisors.js

const defaultAdvisors = ${JSON.stringify(advisorsData, null, 2)};

export { defaultAdvisors };
`;

const jsFilePath = path.join(__dirname, 'v24-advisors-for-v30.js');
fs.writeFileSync(jsFilePath, jsContent);

console.log('✅ JavaScript version created!');
console.log(`📄 JS file: ${jsFilePath}`);

console.log('\n🚀 Next Steps:');
console.log('==============');
console.log('1. Review the generated SQL file');
console.log('2. Run the SQL in your V30 Supabase SQL Editor');
console.log('3. Or use the JS file to update V30 AppStateContext.js');
console.log('4. Test the migration in your V30 app');

console.log('\n🎉 Migration preparation complete!');